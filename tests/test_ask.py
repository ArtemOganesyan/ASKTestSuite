import db.q_users as db_tests
import db.q_quiz as db_quiz
from api.register_student import register_student_account
from api.quiz import *
from utilities.logger import get_logger as log

import pytest


class TestSample:
    def test_db_user_exist(self):
        assert db_tests.user_exist("raha.fake@gmail.com")[0]['id'] > 0

    def test_api_registration(self):
        response = register_student_account()
        assert response.status_code == 200


@pytest.mark.quiz
class TestQuiz:
    quiz_iz = None  # we will create class attribute to use it across our tests

    def test_api_db_quiz_create(self, setup):
        token = setup.json().get("token")  # get token from response generated by setup fixture
        pytest.quiz_id = create_quiz(token).json().get(
            'id')  # api call to create quiz and get id, override attribute value
        assert pytest.quiz_id == db_quiz.get_quiz_record_by_id(pytest.quiz_id)[0].get('id')  # verify
        # presence of created quiz in db

    def test_api_quiz_get(self, setup):
        token = setup.json().get("token")  # get token from response generated by setup fixture
        quiz_list = (get_quizzes(token).json())  # store json object with all quizzes in a list
        result = None
        for quiz in quiz_list:
            if quiz.get('id') == pytest.quiz_id:
                print (pytest.quiz_id)
                print(quiz.get('id'))
                result = True
        if result:
            assert True
        else:
            assert False

    @pytest.mark.skip
    def test_api_db_quiz_change(self):
        pass
    @pytest.mark.skip
    def test_api_db_quiz_delete(self):
        pass
